// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: rpcx/proto/encipher.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 读取配置
type ReadConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ReadConfigReq) Reset() {
	*x = ReadConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadConfigReq) ProtoMessage() {}

func (x *ReadConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadConfigReq.ProtoReflect.Descriptor instead.
func (*ReadConfigReq) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{0}
}

func (x *ReadConfigReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type ReadConfigRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ReadConfigRes) Reset() {
	*x = ReadConfigRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadConfigRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadConfigRes) ProtoMessage() {}

func (x *ReadConfigRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadConfigRes.ProtoReflect.Descriptor instead.
func (*ReadConfigRes) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{1}
}

func (x *ReadConfigRes) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// 生成雪花ID
type NextIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node int64  `protobuf:"varint,1,opt,name=node,proto3" json:"node,omitempty"`
	Kind string `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
}

func (x *NextIdReq) Reset() {
	*x = NextIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextIdReq) ProtoMessage() {}

func (x *NextIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextIdReq.ProtoReflect.Descriptor instead.
func (*NextIdReq) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{2}
}

func (x *NextIdReq) GetNode() int64 {
	if x != nil {
		return x.Node
	}
	return 0
}

func (x *NextIdReq) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

type NextIdRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int64 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *NextIdRes) Reset() {
	*x = NextIdRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextIdRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextIdRes) ProtoMessage() {}

func (x *NextIdRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextIdRes.ProtoReflect.Descriptor instead.
func (*NextIdRes) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{3}
}

func (x *NextIdRes) GetResult() int64 {
	if x != nil {
		return x.Result
	}
	return 0
}

// 数据签名
type SignatureReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SignatureReq) Reset() {
	*x = SignatureReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignatureReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureReq) ProtoMessage() {}

func (x *SignatureReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureReq.ProtoReflect.Descriptor instead.
func (*SignatureReq) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{4}
}

func (x *SignatureReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type SignatureRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SignatureRes) Reset() {
	*x = SignatureRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignatureRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureRes) ProtoMessage() {}

func (x *SignatureRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureRes.ProtoReflect.Descriptor instead.
func (*SignatureRes) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{5}
}

func (x *SignatureRes) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// 数据签名验签
type VerifySignatureReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Sign string `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *VerifySignatureReq) Reset() {
	*x = VerifySignatureReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifySignatureReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifySignatureReq) ProtoMessage() {}

func (x *VerifySignatureReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifySignatureReq.ProtoReflect.Descriptor instead.
func (*VerifySignatureReq) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{6}
}

func (x *VerifySignatureReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *VerifySignatureReq) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

type VerifySignatureRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *VerifySignatureRes) Reset() {
	*x = VerifySignatureRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifySignatureRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifySignatureRes) ProtoMessage() {}

func (x *VerifySignatureRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifySignatureRes.ProtoReflect.Descriptor instead.
func (*VerifySignatureRes) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{7}
}

func (x *VerifySignatureRes) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 令牌数据签名
type TokenSignatureReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Token []byte `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *TokenSignatureReq) Reset() {
	*x = TokenSignatureReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenSignatureReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenSignatureReq) ProtoMessage() {}

func (x *TokenSignatureReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenSignatureReq.ProtoReflect.Descriptor instead.
func (*TokenSignatureReq) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{8}
}

func (x *TokenSignatureReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *TokenSignatureReq) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type TokenSignatureRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *TokenSignatureRes) Reset() {
	*x = TokenSignatureRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenSignatureRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenSignatureRes) ProtoMessage() {}

func (x *TokenSignatureRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenSignatureRes.ProtoReflect.Descriptor instead.
func (*TokenSignatureRes) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{9}
}

func (x *TokenSignatureRes) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// 令牌数据签名验签
type TokenVerifySignatureReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Token []byte `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Sign  string `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *TokenVerifySignatureReq) Reset() {
	*x = TokenVerifySignatureReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenVerifySignatureReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenVerifySignatureReq) ProtoMessage() {}

func (x *TokenVerifySignatureReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenVerifySignatureReq.ProtoReflect.Descriptor instead.
func (*TokenVerifySignatureReq) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{10}
}

func (x *TokenVerifySignatureReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *TokenVerifySignatureReq) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *TokenVerifySignatureReq) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

type TokenVerifySignatureRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *TokenVerifySignatureRes) Reset() {
	*x = TokenVerifySignatureRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenVerifySignatureRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenVerifySignatureRes) ProtoMessage() {}

func (x *TokenVerifySignatureRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenVerifySignatureRes.ProtoReflect.Descriptor instead.
func (*TokenVerifySignatureRes) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{11}
}

func (x *TokenVerifySignatureRes) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// 数据对称加密
type AesEncryptReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AesEncryptReq) Reset() {
	*x = AesEncryptReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AesEncryptReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AesEncryptReq) ProtoMessage() {}

func (x *AesEncryptReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AesEncryptReq.ProtoReflect.Descriptor instead.
func (*AesEncryptReq) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{12}
}

func (x *AesEncryptReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type AesEncryptRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AesEncryptRes) Reset() {
	*x = AesEncryptRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AesEncryptRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AesEncryptRes) ProtoMessage() {}

func (x *AesEncryptRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AesEncryptRes.ProtoReflect.Descriptor instead.
func (*AesEncryptRes) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{13}
}

func (x *AesEncryptRes) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// 数据对称解密
type AesDecryptReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AesDecryptReq) Reset() {
	*x = AesDecryptReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AesDecryptReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AesDecryptReq) ProtoMessage() {}

func (x *AesDecryptReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AesDecryptReq.ProtoReflect.Descriptor instead.
func (*AesDecryptReq) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{14}
}

func (x *AesDecryptReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type AesDecryptRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AesDecryptRes) Reset() {
	*x = AesDecryptRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AesDecryptRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AesDecryptRes) ProtoMessage() {}

func (x *AesDecryptRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AesDecryptRes.ProtoReflect.Descriptor instead.
func (*AesDecryptRes) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{15}
}

func (x *AesDecryptRes) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// ECC数据对称加密
type EccEncryptReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	PublicKey string `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Mode      int64  `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"` // 1.默认 2.固定私钥 3.随机私钥
}

func (x *EccEncryptReq) Reset() {
	*x = EccEncryptReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EccEncryptReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EccEncryptReq) ProtoMessage() {}

func (x *EccEncryptReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EccEncryptReq.ProtoReflect.Descriptor instead.
func (*EccEncryptReq) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{16}
}

func (x *EccEncryptReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *EccEncryptReq) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *EccEncryptReq) GetMode() int64 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type EccEncryptRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *EccEncryptRes) Reset() {
	*x = EccEncryptRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EccEncryptRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EccEncryptRes) ProtoMessage() {}

func (x *EccEncryptRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EccEncryptRes.ProtoReflect.Descriptor instead.
func (*EccEncryptRes) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{17}
}

func (x *EccEncryptRes) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// ECC数据对称解密
type EccDecryptReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EccDecryptReq) Reset() {
	*x = EccDecryptReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EccDecryptReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EccDecryptReq) ProtoMessage() {}

func (x *EccDecryptReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EccDecryptReq.ProtoReflect.Descriptor instead.
func (*EccDecryptReq) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{18}
}

func (x *EccDecryptReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type EccDecryptRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *EccDecryptRes) Reset() {
	*x = EccDecryptRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EccDecryptRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EccDecryptRes) ProtoMessage() {}

func (x *EccDecryptRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EccDecryptRes.ProtoReflect.Descriptor instead.
func (*EccDecryptRes) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{19}
}

func (x *EccDecryptRes) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// Token数据对称加密
type TokenEncryptReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Token []byte `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *TokenEncryptReq) Reset() {
	*x = TokenEncryptReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenEncryptReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenEncryptReq) ProtoMessage() {}

func (x *TokenEncryptReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenEncryptReq.ProtoReflect.Descriptor instead.
func (*TokenEncryptReq) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{20}
}

func (x *TokenEncryptReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *TokenEncryptReq) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type TokenEncryptRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *TokenEncryptRes) Reset() {
	*x = TokenEncryptRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenEncryptRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenEncryptRes) ProtoMessage() {}

func (x *TokenEncryptRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenEncryptRes.ProtoReflect.Descriptor instead.
func (*TokenEncryptRes) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{21}
}

func (x *TokenEncryptRes) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// Token数据对称解密
type TokenDecryptReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Token []byte `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *TokenDecryptReq) Reset() {
	*x = TokenDecryptReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenDecryptReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenDecryptReq) ProtoMessage() {}

func (x *TokenDecryptReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenDecryptReq.ProtoReflect.Descriptor instead.
func (*TokenDecryptReq) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{22}
}

func (x *TokenDecryptReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *TokenDecryptReq) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type TokenDecryptRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *TokenDecryptRes) Reset() {
	*x = TokenDecryptRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenDecryptRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenDecryptRes) ProtoMessage() {}

func (x *TokenDecryptRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenDecryptRes.ProtoReflect.Descriptor instead.
func (*TokenDecryptRes) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{23}
}

func (x *TokenDecryptRes) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// Token令牌生成
type TokenCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject string `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Device  string `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	System  string `protobuf:"bytes,3,opt,name=system,proto3" json:"system,omitempty"`
	Expired int64  `protobuf:"varint,4,opt,name=expired,proto3" json:"expired,omitempty"`
}

func (x *TokenCreateReq) Reset() {
	*x = TokenCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenCreateReq) ProtoMessage() {}

func (x *TokenCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenCreateReq.ProtoReflect.Descriptor instead.
func (*TokenCreateReq) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{24}
}

func (x *TokenCreateReq) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *TokenCreateReq) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *TokenCreateReq) GetSystem() string {
	if x != nil {
		return x.System
	}
	return ""
}

func (x *TokenCreateReq) GetExpired() int64 {
	if x != nil {
		return x.Expired
	}
	return 0
}

type TokenCreateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token   string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Secret  string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	Expired int64  `protobuf:"varint,3,opt,name=expired,proto3" json:"expired,omitempty"`
}

func (x *TokenCreateRes) Reset() {
	*x = TokenCreateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenCreateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenCreateRes) ProtoMessage() {}

func (x *TokenCreateRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenCreateRes.ProtoReflect.Descriptor instead.
func (*TokenCreateRes) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{25}
}

func (x *TokenCreateRes) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *TokenCreateRes) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *TokenCreateRes) GetExpired() int64 {
	if x != nil {
		return x.Expired
	}
	return 0
}

// Token令牌校验
type TokenVerifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token  []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	System string `protobuf:"bytes,2,opt,name=system,proto3" json:"system,omitempty"`
}

func (x *TokenVerifyReq) Reset() {
	*x = TokenVerifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenVerifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenVerifyReq) ProtoMessage() {}

func (x *TokenVerifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenVerifyReq.ProtoReflect.Descriptor instead.
func (*TokenVerifyReq) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{26}
}

func (x *TokenVerifyReq) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *TokenVerifyReq) GetSystem() string {
	if x != nil {
		return x.System
	}
	return ""
}

type TokenVerifyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject string `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *TokenVerifyRes) Reset() {
	*x = TokenVerifyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenVerifyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenVerifyRes) ProtoMessage() {}

func (x *TokenVerifyRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenVerifyRes.ProtoReflect.Descriptor instead.
func (*TokenVerifyRes) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{27}
}

func (x *TokenVerifyRes) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

// 获取公钥
type PublicKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublicKeyReq) Reset() {
	*x = PublicKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKeyReq) ProtoMessage() {}

func (x *PublicKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKeyReq.ProtoReflect.Descriptor instead.
func (*PublicKeyReq) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{28}
}

type PublicKeyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *PublicKeyRes) Reset() {
	*x = PublicKeyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicKeyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKeyRes) ProtoMessage() {}

func (x *PublicKeyRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKeyRes.ProtoReflect.Descriptor instead.
func (*PublicKeyRes) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{29}
}

func (x *PublicKeyRes) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// ECC私钥数据签名
type EccSignatureReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EccSignatureReq) Reset() {
	*x = EccSignatureReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EccSignatureReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EccSignatureReq) ProtoMessage() {}

func (x *EccSignatureReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EccSignatureReq.ProtoReflect.Descriptor instead.
func (*EccSignatureReq) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{30}
}

func (x *EccSignatureReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type EccSignatureRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *EccSignatureRes) Reset() {
	*x = EccSignatureRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EccSignatureRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EccSignatureRes) ProtoMessage() {}

func (x *EccSignatureRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EccSignatureRes.ProtoReflect.Descriptor instead.
func (*EccSignatureRes) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{31}
}

func (x *EccSignatureRes) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// ECC私钥协商秘钥数据签名验签
type EccVerifySharedSignatureReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	PublicKey string `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
}

func (x *EccVerifySharedSignatureReq) Reset() {
	*x = EccVerifySharedSignatureReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EccVerifySharedSignatureReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EccVerifySharedSignatureReq) ProtoMessage() {}

func (x *EccVerifySharedSignatureReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EccVerifySharedSignatureReq.ProtoReflect.Descriptor instead.
func (*EccVerifySharedSignatureReq) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{32}
}

func (x *EccVerifySharedSignatureReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *EccVerifySharedSignatureReq) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type EccVerifySharedSignatureRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *EccVerifySharedSignatureRes) Reset() {
	*x = EccVerifySharedSignatureRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EccVerifySharedSignatureRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EccVerifySharedSignatureRes) ProtoMessage() {}

func (x *EccVerifySharedSignatureRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EccVerifySharedSignatureRes.ProtoReflect.Descriptor instead.
func (*EccVerifySharedSignatureRes) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{33}
}

func (x *EccVerifySharedSignatureRes) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

// ECC公钥数据签名
type EccVerifySignatureReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Sign string `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *EccVerifySignatureReq) Reset() {
	*x = EccVerifySignatureReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EccVerifySignatureReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EccVerifySignatureReq) ProtoMessage() {}

func (x *EccVerifySignatureReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EccVerifySignatureReq.ProtoReflect.Descriptor instead.
func (*EccVerifySignatureReq) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{34}
}

func (x *EccVerifySignatureReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *EccVerifySignatureReq) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

type EccVerifySignatureRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *EccVerifySignatureRes) Reset() {
	*x = EccVerifySignatureRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EccVerifySignatureRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EccVerifySignatureRes) ProtoMessage() {}

func (x *EccVerifySignatureRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EccVerifySignatureRes.ProtoReflect.Descriptor instead.
func (*EccVerifySignatureRes) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{35}
}

func (x *EccVerifySignatureRes) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type EccSharedSignatureReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string `protobuf:"bytes,1,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Data      string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *EccSharedSignatureReq) Reset() {
	*x = EccSharedSignatureReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EccSharedSignatureReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EccSharedSignatureReq) ProtoMessage() {}

func (x *EccSharedSignatureReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EccSharedSignatureReq.ProtoReflect.Descriptor instead.
func (*EccSharedSignatureReq) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{36}
}

func (x *EccSharedSignatureReq) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *EccSharedSignatureReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type EccSharedSignatureRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *EccSharedSignatureRes) Reset() {
	*x = EccSharedSignatureRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EccSharedSignatureRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EccSharedSignatureRes) ProtoMessage() {}

func (x *EccSharedSignatureRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EccSharedSignatureRes.ProtoReflect.Descriptor instead.
func (*EccSharedSignatureRes) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{37}
}

func (x *EccSharedSignatureRes) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type CreatePasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password []byte `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	N        int32  `protobuf:"varint,2,opt,name=n,proto3" json:"n,omitempty"`
	R        int32  `protobuf:"varint,3,opt,name=r,proto3" json:"r,omitempty"`
	P        int32  `protobuf:"varint,4,opt,name=p,proto3" json:"p,omitempty"`
	L        int32  `protobuf:"varint,5,opt,name=l,proto3" json:"l,omitempty"`
}

func (x *CreatePasswordReq) Reset() {
	*x = CreatePasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePasswordReq) ProtoMessage() {}

func (x *CreatePasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePasswordReq.ProtoReflect.Descriptor instead.
func (*CreatePasswordReq) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{38}
}

func (x *CreatePasswordReq) GetPassword() []byte {
	if x != nil {
		return x.Password
	}
	return nil
}

func (x *CreatePasswordReq) GetN() int32 {
	if x != nil {
		return x.N
	}
	return 0
}

func (x *CreatePasswordReq) GetR() int32 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *CreatePasswordReq) GetP() int32 {
	if x != nil {
		return x.P
	}
	return 0
}

func (x *CreatePasswordReq) GetL() int32 {
	if x != nil {
		return x.L
	}
	return 0
}

type CreatePasswordRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Salt   string `protobuf:"bytes,2,opt,name=salt,proto3" json:"salt,omitempty"`
}

func (x *CreatePasswordRes) Reset() {
	*x = CreatePasswordRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePasswordRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePasswordRes) ProtoMessage() {}

func (x *CreatePasswordRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePasswordRes.ProtoReflect.Descriptor instead.
func (*CreatePasswordRes) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{39}
}

func (x *CreatePasswordRes) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *CreatePasswordRes) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

type VerifyPasswordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password string `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	Salt     string `protobuf:"bytes,2,opt,name=salt,proto3" json:"salt,omitempty"`
	N        int32  `protobuf:"varint,3,opt,name=n,proto3" json:"n,omitempty"`
	R        int32  `protobuf:"varint,4,opt,name=r,proto3" json:"r,omitempty"`
	P        int32  `protobuf:"varint,5,opt,name=p,proto3" json:"p,omitempty"`
	L        int32  `protobuf:"varint,6,opt,name=l,proto3" json:"l,omitempty"`
	Target   string `protobuf:"bytes,7,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *VerifyPasswordReq) Reset() {
	*x = VerifyPasswordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyPasswordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyPasswordReq) ProtoMessage() {}

func (x *VerifyPasswordReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyPasswordReq.ProtoReflect.Descriptor instead.
func (*VerifyPasswordReq) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{40}
}

func (x *VerifyPasswordReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *VerifyPasswordReq) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

func (x *VerifyPasswordReq) GetN() int32 {
	if x != nil {
		return x.N
	}
	return 0
}

func (x *VerifyPasswordReq) GetR() int32 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *VerifyPasswordReq) GetP() int32 {
	if x != nil {
		return x.P
	}
	return 0
}

func (x *VerifyPasswordReq) GetL() int32 {
	if x != nil {
		return x.L
	}
	return 0
}

func (x *VerifyPasswordReq) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type VerifyPasswordRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *VerifyPasswordRes) Reset() {
	*x = VerifyPasswordRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpcx_proto_encipher_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyPasswordRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyPasswordRes) ProtoMessage() {}

func (x *VerifyPasswordRes) ProtoReflect() protoreflect.Message {
	mi := &file_rpcx_proto_encipher_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyPasswordRes.ProtoReflect.Descriptor instead.
func (*VerifyPasswordRes) Descriptor() ([]byte, []int) {
	return file_rpcx_proto_encipher_proto_rawDescGZIP(), []int{41}
}

func (x *VerifyPasswordRes) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_rpcx_proto_encipher_proto protoreflect.FileDescriptor

var file_rpcx_proto_encipher_proto_rawDesc = []byte{
	0x0a, 0x19, 0x72, 0x70, 0x63, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x63,
	0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x65, 0x6e, 0x63,
	0x69, 0x70, 0x68, 0x65, 0x72, 0x22, 0x21, 0x0a, 0x0d, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x27, 0x0a, 0x0d, 0x52, 0x65, 0x61, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x33, 0x0a, 0x09, 0x4e, 0x65, 0x78, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6e, 0x6f,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x23, 0x0a, 0x09, 0x4e, 0x65, 0x78, 0x74, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x22, 0x0a, 0x0c, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x26, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3c, 0x0a, 0x12, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x2c, 0x0a, 0x12, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x3d, 0x0a, 0x11, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x2b, 0x0a, 0x11, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x57, 0x0a, 0x17, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x31, 0x0a, 0x17, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x23, 0x0a, 0x0d, 0x41,
	0x65, 0x73, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x27, 0x0a, 0x0d, 0x41, 0x65, 0x73, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x23, 0x0a, 0x0d, 0x41, 0x65, 0x73,
	0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x27,
	0x0a, 0x0d, 0x41, 0x65, 0x73, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x55, 0x0a, 0x0d, 0x45, 0x63, 0x63, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x27,
	0x0a, 0x0d, 0x45, 0x63, 0x63, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x23, 0x0a, 0x0d, 0x45, 0x63, 0x63, 0x44, 0x65,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x27, 0x0a, 0x0d,
	0x45, 0x63, 0x63, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3b, 0x0a, 0x0f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x29, 0x0a, 0x0f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3b, 0x0a,
	0x0f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x29, 0x0a, 0x0f, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x74, 0x0a, 0x0e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x22, 0x58, 0x0a, 0x0e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x22, 0x3e, 0x0a, 0x0e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0x2a, 0x0a, 0x0e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x71, 0x22, 0x26, 0x0a, 0x0c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x25, 0x0a, 0x0f, 0x45, 0x63, 0x63,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x29, 0x0a, 0x0f, 0x45, 0x63, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4f, 0x0a, 0x1b, 0x45,
	0x63, 0x63, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x35, 0x0a, 0x1b,
	0x45, 0x63, 0x63, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x3f, 0x0a, 0x15, 0x45, 0x63, 0x63, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x69, 0x67, 0x6e, 0x22, 0x2f, 0x0a, 0x15, 0x45, 0x63, 0x63, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x49, 0x0a, 0x15, 0x45, 0x63, 0x63, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x2f, 0x0a, 0x15, 0x45, 0x63, 0x63, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x67, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x6e,
	0x12, 0x0c, 0x0a, 0x01, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x72, 0x12, 0x0c,
	0x0a, 0x01, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x70, 0x12, 0x0c, 0x0a, 0x01,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x6c, 0x22, 0x3f, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x22, 0x93, 0x01, 0x0a, 0x11,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x61, 0x6c,
	0x74, 0x12, 0x0c, 0x0a, 0x01, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x6e, 0x12,
	0x0c, 0x0a, 0x01, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x72, 0x12, 0x0c, 0x0a,
	0x01, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x70, 0x12, 0x0c, 0x0a, 0x01, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x22, 0x2b, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xbc,
	0x0b, 0x0a, 0x0b, 0x52, 0x70, 0x63, 0x45, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x12, 0x3d,
	0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x2e, 0x65, 0x6e,
	0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x0a, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x17, 0x2e, 0x65, 0x6e,
	0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x34, 0x0a, 0x06, 0x4e, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x13, 0x2e, 0x65, 0x6e, 0x63, 0x69,
	0x70, 0x68, 0x65, 0x72, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x13,
	0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x16, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x65, 0x6e, 0x63,
	0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68,
	0x65, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1b, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68,
	0x65, 0x72, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x14, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x21, 0x2e, 0x65, 0x6e,
	0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x21,
	0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0a, 0x41, 0x65, 0x73, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x12, 0x17, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x41, 0x65, 0x73,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x65, 0x6e, 0x63,
	0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x41, 0x65, 0x73, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0a, 0x41, 0x65, 0x73, 0x44, 0x65, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x12, 0x17, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x41,
	0x65, 0x73, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x65,
	0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x41, 0x65, 0x73, 0x44, 0x65, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0a, 0x45, 0x63, 0x63, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x17, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72,
	0x2e, 0x45, 0x63, 0x63, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x45, 0x63, 0x63, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0a, 0x45, 0x63, 0x63,
	0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x17, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68,
	0x65, 0x72, 0x2e, 0x45, 0x63, 0x63, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x17, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x45, 0x63, 0x63, 0x44,
	0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0c, 0x45,
	0x63, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x19, 0x2e, 0x65, 0x6e,
	0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x45, 0x63, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65,
	0x72, 0x2e, 0x45, 0x63, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x12, 0x45, 0x63, 0x63, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1f, 0x2e, 0x65, 0x6e, 0x63, 0x69,
	0x70, 0x68, 0x65, 0x72, 0x2e, 0x45, 0x63, 0x63, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x65, 0x6e, 0x63,
	0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x45, 0x63, 0x63, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x58, 0x0a,
	0x12, 0x45, 0x63, 0x63, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x1f, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x45,
	0x63, 0x63, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e,
	0x45, 0x63, 0x63, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x19, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68,
	0x65, 0x72, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x19, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x46, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12,
	0x19, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x65, 0x6e, 0x63,
	0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0b, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65,
	0x72, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x18, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0b,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x18, 0x2e, 0x65, 0x6e,
	0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72,
	0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x22,
	0x00, 0x12, 0x4c, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x1b, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x1a, 0x1b, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x4c, 0x0a, 0x0e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x1b, 0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x65, 0x6e, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x0a, 0x5a,
	0x08, 0x2f, 0x72, 0x70, 0x63, 0x78, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_rpcx_proto_encipher_proto_rawDescOnce sync.Once
	file_rpcx_proto_encipher_proto_rawDescData = file_rpcx_proto_encipher_proto_rawDesc
)

func file_rpcx_proto_encipher_proto_rawDescGZIP() []byte {
	file_rpcx_proto_encipher_proto_rawDescOnce.Do(func() {
		file_rpcx_proto_encipher_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpcx_proto_encipher_proto_rawDescData)
	})
	return file_rpcx_proto_encipher_proto_rawDescData
}

var file_rpcx_proto_encipher_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_rpcx_proto_encipher_proto_goTypes = []any{
	(*ReadConfigReq)(nil),               // 0: encipher.ReadConfigReq
	(*ReadConfigRes)(nil),               // 1: encipher.ReadConfigRes
	(*NextIdReq)(nil),                   // 2: encipher.NextIdReq
	(*NextIdRes)(nil),                   // 3: encipher.NextIdRes
	(*SignatureReq)(nil),                // 4: encipher.SignatureReq
	(*SignatureRes)(nil),                // 5: encipher.SignatureRes
	(*VerifySignatureReq)(nil),          // 6: encipher.VerifySignatureReq
	(*VerifySignatureRes)(nil),          // 7: encipher.VerifySignatureRes
	(*TokenSignatureReq)(nil),           // 8: encipher.TokenSignatureReq
	(*TokenSignatureRes)(nil),           // 9: encipher.TokenSignatureRes
	(*TokenVerifySignatureReq)(nil),     // 10: encipher.TokenVerifySignatureReq
	(*TokenVerifySignatureRes)(nil),     // 11: encipher.TokenVerifySignatureRes
	(*AesEncryptReq)(nil),               // 12: encipher.AesEncryptReq
	(*AesEncryptRes)(nil),               // 13: encipher.AesEncryptRes
	(*AesDecryptReq)(nil),               // 14: encipher.AesDecryptReq
	(*AesDecryptRes)(nil),               // 15: encipher.AesDecryptRes
	(*EccEncryptReq)(nil),               // 16: encipher.EccEncryptReq
	(*EccEncryptRes)(nil),               // 17: encipher.EccEncryptRes
	(*EccDecryptReq)(nil),               // 18: encipher.EccDecryptReq
	(*EccDecryptRes)(nil),               // 19: encipher.EccDecryptRes
	(*TokenEncryptReq)(nil),             // 20: encipher.TokenEncryptReq
	(*TokenEncryptRes)(nil),             // 21: encipher.TokenEncryptRes
	(*TokenDecryptReq)(nil),             // 22: encipher.TokenDecryptReq
	(*TokenDecryptRes)(nil),             // 23: encipher.TokenDecryptRes
	(*TokenCreateReq)(nil),              // 24: encipher.TokenCreateReq
	(*TokenCreateRes)(nil),              // 25: encipher.TokenCreateRes
	(*TokenVerifyReq)(nil),              // 26: encipher.TokenVerifyReq
	(*TokenVerifyRes)(nil),              // 27: encipher.TokenVerifyRes
	(*PublicKeyReq)(nil),                // 28: encipher.PublicKeyReq
	(*PublicKeyRes)(nil),                // 29: encipher.PublicKeyRes
	(*EccSignatureReq)(nil),             // 30: encipher.EccSignatureReq
	(*EccSignatureRes)(nil),             // 31: encipher.EccSignatureRes
	(*EccVerifySharedSignatureReq)(nil), // 32: encipher.EccVerifySharedSignatureReq
	(*EccVerifySharedSignatureRes)(nil), // 33: encipher.EccVerifySharedSignatureRes
	(*EccVerifySignatureReq)(nil),       // 34: encipher.EccVerifySignatureReq
	(*EccVerifySignatureRes)(nil),       // 35: encipher.EccVerifySignatureRes
	(*EccSharedSignatureReq)(nil),       // 36: encipher.EccSharedSignatureReq
	(*EccSharedSignatureRes)(nil),       // 37: encipher.EccSharedSignatureRes
	(*CreatePasswordReq)(nil),           // 38: encipher.CreatePasswordReq
	(*CreatePasswordRes)(nil),           // 39: encipher.CreatePasswordRes
	(*VerifyPasswordReq)(nil),           // 40: encipher.VerifyPasswordReq
	(*VerifyPasswordRes)(nil),           // 41: encipher.VerifyPasswordRes
}
var file_rpcx_proto_encipher_proto_depIdxs = []int32{
	28, // 0: encipher.RpcEncipher.PublicKey:input_type -> encipher.PublicKeyReq
	0,  // 1: encipher.RpcEncipher.ReadConfig:input_type -> encipher.ReadConfigReq
	2,  // 2: encipher.RpcEncipher.NextId:input_type -> encipher.NextIdReq
	4,  // 3: encipher.RpcEncipher.Signature:input_type -> encipher.SignatureReq
	6,  // 4: encipher.RpcEncipher.VerifySignature:input_type -> encipher.VerifySignatureReq
	8,  // 5: encipher.RpcEncipher.TokenSignature:input_type -> encipher.TokenSignatureReq
	10, // 6: encipher.RpcEncipher.TokenVerifySignature:input_type -> encipher.TokenVerifySignatureReq
	12, // 7: encipher.RpcEncipher.AesEncrypt:input_type -> encipher.AesEncryptReq
	14, // 8: encipher.RpcEncipher.AesDecrypt:input_type -> encipher.AesDecryptReq
	16, // 9: encipher.RpcEncipher.EccEncrypt:input_type -> encipher.EccEncryptReq
	18, // 10: encipher.RpcEncipher.EccDecrypt:input_type -> encipher.EccDecryptReq
	30, // 11: encipher.RpcEncipher.EccSignature:input_type -> encipher.EccSignatureReq
	34, // 12: encipher.RpcEncipher.EccVerifySignature:input_type -> encipher.EccVerifySignatureReq
	36, // 13: encipher.RpcEncipher.EccSharedSignature:input_type -> encipher.EccSharedSignatureReq
	20, // 14: encipher.RpcEncipher.TokenEncrypt:input_type -> encipher.TokenEncryptReq
	22, // 15: encipher.RpcEncipher.TokenDecrypt:input_type -> encipher.TokenDecryptReq
	24, // 16: encipher.RpcEncipher.TokenCreate:input_type -> encipher.TokenCreateReq
	26, // 17: encipher.RpcEncipher.TokenVerify:input_type -> encipher.TokenVerifyReq
	38, // 18: encipher.RpcEncipher.CreatePassword:input_type -> encipher.CreatePasswordReq
	40, // 19: encipher.RpcEncipher.VerifyPassword:input_type -> encipher.VerifyPasswordReq
	29, // 20: encipher.RpcEncipher.PublicKey:output_type -> encipher.PublicKeyRes
	1,  // 21: encipher.RpcEncipher.ReadConfig:output_type -> encipher.ReadConfigRes
	3,  // 22: encipher.RpcEncipher.NextId:output_type -> encipher.NextIdRes
	5,  // 23: encipher.RpcEncipher.Signature:output_type -> encipher.SignatureRes
	7,  // 24: encipher.RpcEncipher.VerifySignature:output_type -> encipher.VerifySignatureRes
	9,  // 25: encipher.RpcEncipher.TokenSignature:output_type -> encipher.TokenSignatureRes
	11, // 26: encipher.RpcEncipher.TokenVerifySignature:output_type -> encipher.TokenVerifySignatureRes
	13, // 27: encipher.RpcEncipher.AesEncrypt:output_type -> encipher.AesEncryptRes
	15, // 28: encipher.RpcEncipher.AesDecrypt:output_type -> encipher.AesDecryptRes
	17, // 29: encipher.RpcEncipher.EccEncrypt:output_type -> encipher.EccEncryptRes
	19, // 30: encipher.RpcEncipher.EccDecrypt:output_type -> encipher.EccDecryptRes
	31, // 31: encipher.RpcEncipher.EccSignature:output_type -> encipher.EccSignatureRes
	35, // 32: encipher.RpcEncipher.EccVerifySignature:output_type -> encipher.EccVerifySignatureRes
	37, // 33: encipher.RpcEncipher.EccSharedSignature:output_type -> encipher.EccSharedSignatureRes
	21, // 34: encipher.RpcEncipher.TokenEncrypt:output_type -> encipher.TokenEncryptRes
	23, // 35: encipher.RpcEncipher.TokenDecrypt:output_type -> encipher.TokenDecryptRes
	25, // 36: encipher.RpcEncipher.TokenCreate:output_type -> encipher.TokenCreateRes
	27, // 37: encipher.RpcEncipher.TokenVerify:output_type -> encipher.TokenVerifyRes
	39, // 38: encipher.RpcEncipher.CreatePassword:output_type -> encipher.CreatePasswordRes
	41, // 39: encipher.RpcEncipher.VerifyPassword:output_type -> encipher.VerifyPasswordRes
	20, // [20:40] is the sub-list for method output_type
	0,  // [0:20] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_rpcx_proto_encipher_proto_init() }
func file_rpcx_proto_encipher_proto_init() {
	if File_rpcx_proto_encipher_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpcx_proto_encipher_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ReadConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ReadConfigRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*NextIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*NextIdRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*SignatureReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*SignatureRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*VerifySignatureReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*VerifySignatureRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*TokenSignatureReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*TokenSignatureRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*TokenVerifySignatureReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*TokenVerifySignatureRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*AesEncryptReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*AesEncryptRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*AesDecryptReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*AesDecryptRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*EccEncryptReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*EccEncryptRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*EccDecryptReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*EccDecryptRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*TokenEncryptReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*TokenEncryptRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*TokenDecryptReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*TokenDecryptRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*TokenCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*TokenCreateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*TokenVerifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*TokenVerifyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*PublicKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*PublicKeyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*EccSignatureReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*EccSignatureRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*EccVerifySharedSignatureReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*EccVerifySharedSignatureRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*EccVerifySignatureReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*EccVerifySignatureRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*EccSharedSignatureReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*EccSharedSignatureRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePasswordRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyPasswordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpcx_proto_encipher_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*VerifyPasswordRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpcx_proto_encipher_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpcx_proto_encipher_proto_goTypes,
		DependencyIndexes: file_rpcx_proto_encipher_proto_depIdxs,
		MessageInfos:      file_rpcx_proto_encipher_proto_msgTypes,
	}.Build()
	File_rpcx_proto_encipher_proto = out.File
	file_rpcx_proto_encipher_proto_rawDesc = nil
	file_rpcx_proto_encipher_proto_goTypes = nil
	file_rpcx_proto_encipher_proto_depIdxs = nil
}
